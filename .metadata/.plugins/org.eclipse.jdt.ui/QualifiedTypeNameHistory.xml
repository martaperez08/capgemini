<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.example.domains.entities.dtos.CategoryDTO"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="java.security.Timestamp"/>
    <fullyQualifiedTypeName name="org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter"/>
    <fullyQualifiedTypeName name="java.sql.Timestamp"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.PastOrPresent"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonProperty"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Size"/>
    <fullyQualifiedTypeName name="java.util.Objects"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Positive"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
    <fullyQualifiedTypeName name="javax.lang.model.element.Element"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="org.apache.catalina.Pipeline"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="org.aspectj.weaver.patterns.HasThisTypePatternTriedToSneakInSomeGenericOrParameterizedTypePatternMatchingStuffAnywhereVisitor"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="org.springframework.test.context.ActiveProfiles"/>
    <fullyQualifiedTypeName name="org.hibernate.cache.spi.support.AbstractReadWriteAccess.Item"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBean"/>
    <fullyQualifiedTypeName name="com.example.domains.contracts.repositories.ActorRepository"/>
    <fullyQualifiedTypeName name="java.lang.ArrayStoreException"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.example.exception.InvalidDataException"/>
    <fullyQualifiedTypeName name="com.example.aplication.services.CatalogoService"/>
    <fullyQualifiedTypeName name="com.example.domains.contracts.service.ActorService"/>
    <fullyQualifiedTypeName name="com.example.domains.service.CategoryServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest"/>
    <fullyQualifiedTypeName name="com.example.domains.contracts.repositories.CategoryRepository"/>
    <fullyQualifiedTypeName name="com.example.domains.contracts.service.CategoryService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="lombok.var"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.DisplayName"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.params.provider.CsvSource"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.params.ParameterizedTest"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.params.provider.EnumSource"/>
    <fullyQualifiedTypeName name="org.h2.server.web.WebServer"/>
    <fullyQualifiedTypeName name="com.mysql.cj.protocol.Message"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="com.example.domains.entities.Film.Rating"/>
    <fullyQualifiedTypeName name="com.example.domains.entities.Category"/>
    <fullyQualifiedTypeName name="com.example.domains.entities.FilmActor"/>
    <fullyQualifiedTypeName name="com.example.domains.core.entities.EntityBase"/>
    <fullyQualifiedTypeName name="com.example.exception.NotFoundException"/>
    <fullyQualifiedTypeName name="com.example.domains.entities.Actor"/>
    <fullyQualifiedTypeName name="com.example.domains.contracts.repositories.FilmRepository"/>
    <fullyQualifiedTypeName name="com.example.domains.contracts.service.FilmService"/>
    <fullyQualifiedTypeName name="com.example.domains.entities.Film"/>
    <fullyQualifiedTypeName name="com.example.domains.contracts.repositories.LanguageRepository"/>
    <fullyQualifiedTypeName name="com.example.domains.contracts.service.LanguageService"/>
    <fullyQualifiedTypeName name="com.example.domains.entities.Language"/>
</qualifiedTypeNameHistroy>
